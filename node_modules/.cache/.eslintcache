[{"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\index.js":"1","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\GomokuGame.jsx":"2","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\Board.jsx":"3","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\GameLogic.jsx":"4","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\HomePage.jsx":"5","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\PlayerVsPlayer.jsx":"6","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\Buttons.jsx":"7","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\ComputerVsComputer.jsx":"8","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ShowText.jsx":"9","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\PlayerVsComputer.jsx":"10","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\RandomPlayer.jsx":"11","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\SharedData.jsx":"12","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\Simulation.jsx":"13","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\MinimaxAlg.jsx":"14","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\GAalgorithm.jsx":"15","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\AILogic\\Objects.jsx":"16","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\AILogic\\MoveSearch.jsx":"17","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ChoicePage\\AIVsAIChoice.jsx":"18","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ChoicePage\\PlayerVsAIChoice.jsx":"19","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ChoicePage\\SimulationChoice.jsx":"20","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\AILogic\\MoveEvaluationNew.jsx":"21","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\GeneralLogic.jsx":"22","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\Experiment\\minimax.jsx":"23","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\Experiment\\moveEvaluationNoDF.jsx":"24"},{"size":200,"mtime":1656600084000,"results":"25","hashOfConfig":"26"},{"size":1882,"mtime":1661453129831,"results":"27","hashOfConfig":"26"},{"size":970,"mtime":1661386012240,"results":"28","hashOfConfig":"26"},{"size":6365,"mtime":1658104572000,"results":"29","hashOfConfig":"26"},{"size":979,"mtime":1659292474000,"results":"30","hashOfConfig":"26"},{"size":5653,"mtime":1661799695261,"results":"31","hashOfConfig":"26"},{"size":1974,"mtime":1661383073297,"results":"32","hashOfConfig":"26"},{"size":10211,"mtime":1661708019038,"results":"33","hashOfConfig":"26"},{"size":254,"mtime":1656539576000,"results":"34","hashOfConfig":"26"},{"size":9956,"mtime":1661799665295,"results":"35","hashOfConfig":"26"},{"size":1257,"mtime":1661386034568,"results":"36","hashOfConfig":"26"},{"size":2251,"mtime":1657662320000,"results":"37","hashOfConfig":"26"},{"size":12054,"mtime":1661799378684,"results":"38","hashOfConfig":"26"},{"size":5479,"mtime":1661793114303,"results":"39","hashOfConfig":"26"},{"size":8277,"mtime":1661708389331,"results":"40","hashOfConfig":"26"},{"size":362,"mtime":1658325768000,"results":"41","hashOfConfig":"26"},{"size":7937,"mtime":1661633303271,"results":"42","hashOfConfig":"26"},{"size":2482,"mtime":1658062206000,"results":"43","hashOfConfig":"26"},{"size":1964,"mtime":1658062336000,"results":"44","hashOfConfig":"26"},{"size":2713,"mtime":1661810920695,"results":"45","hashOfConfig":"26"},{"size":9904,"mtime":1661386009840,"results":"46","hashOfConfig":"26"},{"size":1249,"mtime":1661383107455,"results":"47","hashOfConfig":"26"},{"size":8859,"mtime":1661795595043,"results":"48","hashOfConfig":"26"},{"size":9945,"mtime":1661356827016,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"46fdr6",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"53"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\index.js",[],[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\GomokuGame.jsx",["127","128","129"],[],"// jshint esversion:6\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport {putDownPiece,checkWinning} from \"./GameLogic\";\nimport HomePage from \"./HomePage\";\nimport PlayerVsPlayer from \"./gameplaypage/PlayerVsPlayer\";\nimport PlayerVsAIChoice from \"./ChoicePage/PlayerVsAIChoice\"\nimport AIVsAIChoice from \"./ChoicePage/AIVsAIChoice\"\nimport SimulationChoice from \"./ChoicePage/SimulationChoice\"\n\nfunction GomokuGame (){\n\n\n\n  const [homePageState,setHomeState]=useState({\n    showPage:true,\n    modeClicked:null\n  })\n  function handleModeClick(mode){\n    // console.log(mode)\n      setHomeState({showPage:homePageState.showPage?false:null,\n                     modeClicked:mode      \n                    })\n  }\n\n  function handleHomeButtonClick(){\n        setHomeState({showPage:homePageState.showPage?null:true})\n  }\n\n\n\nif(homePageState.showPage===false){\n  // console.log(homePageState.showPage)\n  // console.log(homePageState.modeClicked)\n\n    //playerVSplayer game page\n  if(homePageState.modeClicked===\"PvsP\"){    \n    return (\n      <div>\n        <PlayerVsPlayer onClickHome={()=>handleHomeButtonClick()} />\n      </div>\n    )\n  }\n\n  //playerVScomputer game setting page\n   else if(homePageState.modeClicked===\"PvsAI\"){\n    return (\n    <div>\n    <PlayerVsAIChoice onClickHome={()=>handleHomeButtonClick()} />\n  </div>\n    )\n\n      //computerVScomputer game setting page\n   } else if (homePageState.modeClicked===\"AIvsAI\"){\n    return (\n    <div>\n    <AIVsAIChoice onClickHome={()=>handleHomeButtonClick()} />\n  </div>\n    )\n\n      //simulation setting page\n   } else if (homePageState.modeClicked===\"Simulation\"){\n    return (\n    <div>\n    <SimulationChoice onClickHome={()=>handleHomeButtonClick()} />\n  </div>\n    )\n   }\n\n   //Home page\n} else{\n  return (\n    <HomePage onClick={(mode)=>handleModeClick(mode)}/>\n  )\n}\n\n\n\n}\n\nexport default GomokuGame;\n","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\Board.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\GameLogic.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\HomePage.jsx",["130"],[],"import React, { useState } from \"react\";\r\nimport {NavButton}  from \"./Buttons\";\r\n\r\n\r\nfunction HomePage(props){\r\n\r\n    return(\r\n        <div>\r\n\r\n            <div>\r\n                <NavButton \r\n                        text=\"Human VS Human \"\r\n                        onClick={()=>props.onClick(\"PvsP\")}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <NavButton \r\n                        text=\"Human VS Computer\"\r\n                        onClick={()=>props.onClick(\"PvsAI\")}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <NavButton \r\n                text=\"Computer VS Computer\"\r\n                onClick={()=>props.onClick(\"AIvsAI\")}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <NavButton \r\n                    text=\"Simulation\"\r\n                    onClick={()=>props.onClick(\"Simulation\")}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\PlayerVsPlayer.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\Buttons.jsx",["131","132"],[],"//jshint esversion:6\r\nimport React, { Component } from \"react\";\r\n\r\n//the component, \"intersection\", is from my previous personal project, and it can\r\n// be found on github.com/Honghao-Zheng\r\nfunction Intersection(props) {\r\n  let selectedPiece=props.piece;\r\n  let cellColour=props.colour;\r\n  return (\r\n    <button className={\"square \"+cellColour+\" \"+selectedPiece} onClick={props.onClick}>\r\n\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction StartAIvsAI(props) {\r\n  let selectedPiece=props.piece;\r\n  let cellColour=props.colour;\r\n\r\n  return (\r\n    <button className={\"square \"+cellColour+\" \"+selectedPiece} onClick={props.onClick}>\r\n\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction NavButton(props){\r\n  return (\r\n    <button className={\"navigation\"} onClick={props.onClick}>{props.text}</button>\r\n  )\r\n}\r\n\r\nfunction FunctionButton(props){\r\n  return (\r\n    <button className={\"function\"} onClick={props.onClick}>{props.text}</button>\r\n    )\r\n  \r\n}\r\n\r\n\r\nfunction RadioButtons(props) {\r\n  let values = props.values;\r\n  let groupName = props.groupName;\r\n  let defaultValue=props.defaultValue;\r\n\r\n  return (\r\n    <div onChange={(event)=>{\r\n      props.changeSetting(event.target.value)\r\n    }} className=\"radioDis\">\r\n    <div className=\"cols\">\r\n        {groupName}\r\n    </div>\r\n      {values.map((lable, index) => {\r\n        return (\r\n          <div className=\"cols\">\r\n            <p1> {lable}</p1>\r\n            <input type=\"radio\" value={lable} name={groupName} checked={lable===defaultValue}/>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n{/* <div onChange={onChangeValue} className=\"rows\">\r\n\r\n<div className=\"cols\">\r\n<p1> Male</p1>\r\n<input type=\"radio\" value=\"Male\" name=\"gender\" />\r\n</div>\r\n<div className=\"cols\">\r\n<p1>Female </p1>\r\n<input type=\"radio\" value=\"Female\" name=\"gender\" /> \r\n</div>\r\n<div className=\"cols\">\r\n<p1>Other </p1>\r\n<input type=\"radio\" value=\"Other\" name=\"gender\" />\r\n\r\n</div> */}\r\n\r\nexport {StartAIvsAI,Intersection,FunctionButton,NavButton,RadioButtons} \r\n\r\n\r\n","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\ComputerVsComputer.jsx",["133","134"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ShowText.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\PlayerVsComputer.jsx",["135","136"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\RandomPlayer.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\SharedData.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\gameplaypage\\Simulation.jsx",["137","138","139","140","141","142","143"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\MinimaxAlg.jsx",["144","145","146","147"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\GAalgorithm.jsx",["148"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\AILogic\\Objects.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\AILogic\\MoveSearch.jsx",["149","150"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ChoicePage\\AIVsAIChoice.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ChoicePage\\PlayerVsAIChoice.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\ChoicePage\\SimulationChoice.jsx",["151"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\AIplayers\\AILogic\\MoveEvaluationNew.jsx",["152","153","154","155","156"],[],"import {swapColor} from \"../../GameLogic.jsx\";\r\nimport {copyTwoDimArray} from \"../../GeneralLogic.jsx\"\r\nimport {moveObject} from \"./Objects\";\r\nfunction atkMoveEvaluation(move,pieceColor,board){\r\n    let rowCoord=move[0];\r\n    let colCoord=move[1];\r\n    let score=0;\r\n\r\n    let threeCount=0;\r\n    let fourCount=0;\r\n    let fourOneCount=0;\r\n    let fiveCount=0;\r\n    let vThreat=threatRecognise(verticalCheck(rowCoord,colCoord,pieceColor,board));\r\n    // console.log(\"vThreat: \"+vThreat)\r\n    let hThreat=threatRecognise(horizontalCheck(rowCoord,colCoord,pieceColor,board));\r\n    // console.log(\"hThreat: \"+hThreat)\r\n    let d1Threat=threatRecognise(leftBotToRightTopCheck(rowCoord,colCoord,pieceColor,board));\r\n    // console.log(\"d1Threat: \"+d1Threat)\r\n    let d2Threat=threatRecognise(leftTopToRightBotCheck(rowCoord,colCoord,pieceColor,board));\r\n    // console.log(\"d2Threat: \"+d2Threat)\r\n\r\n    let threats=[vThreat,hThreat,d1Threat,d2Threat];\r\n    // let threats=[hThreat];\r\n    let threatIndex;\r\n    let threat;\r\n    for (threatIndex=0;threatIndex<threats.length;threatIndex++){\r\n        threat=threats[threatIndex]\r\n        if (threat===2){\r\n            score+=2;\r\n        } else if(threat===21){\r\n            score +=1;\r\n        } else if(threat===31){\r\n            score+=4;\r\n        } else if(threat===3){\r\n                score+=9            \r\n        } else if(threat===4){\r\n            score+=37\r\n        } else if(threat===41){\r\n            score+=20\r\n    }   else if(threat===5){\r\n        score+=150\r\n    }\r\n}\r\n    // console.log(\"attack move evaluation:\"+score)\r\n    return {score:score, threats:threats}\r\n\r\n}\r\n\r\nfunction verticalCheck(rowCoord,colCoord,pieceColor,board){\r\n    let sameColorCount=-1;\r\n    let oppositeColorCount=0;\r\n    let rowIndex=rowCoord;\r\n    let colIndex=colCoord;\r\n    let occupant;\r\n    let counts;\r\n    // console.log(\"rowIndex: \"+rowIndex)\r\n    // console.log(\"colIndex: \"+colIndex)\r\n    // console.log(\"board[rowIndex][colIndex]: \"+board[rowIndex][colIndex])\r\n    while( rowIndex>=0){\r\n        occupant=board[rowIndex][colIndex];\r\n        if (occupant!==\" \" ){\r\n            // console.log(\"check top rowIndex: \"+rowIndex)\r\n            // console.log(\"check top colIndex: \"+colIndex)\r\n            \r\n            if (occupant===pieceColor){\r\n                sameColorCount++\r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n            rowIndex--;\r\n        } else {\r\n            break;\r\n        };\r\n\r\n        }\r\n\r\n    rowIndex=rowCoord;\r\n    colIndex=colCoord;\r\n    while(rowIndex<15){\r\n        occupant=board[rowIndex][colIndex];\r\n        if(occupant!==\" \"){\r\n            // console.log(\"check bot rowIndex: \"+rowIndex)\r\n            // console.log(\"check bot colIndex: \"+colIndex)\r\n            \r\n            if (occupant===pieceColor){\r\n                sameColorCount++\r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n            rowIndex++;\r\n\r\n        } else{\r\n            break;\r\n        }\r\n\r\n    }\r\n    counts={sameColor:sameColorCount, oppositeColor:oppositeColorCount}\r\n    // console.log(\"vertical same counts: \"+counts.sameColor)\r\n    // console.log(\"vertical opposite counts: \"+counts.oppositeColor)\r\n    return counts\r\n}\r\n\r\n\r\nfunction horizontalCheck(rowCoord,colCoord,pieceColor,board){\r\n    let sameColorCount=-1;\r\n    let oppositeColorCount=0;\r\n    let rowIndex=rowCoord;\r\n    let colIndex=colCoord;\r\n    // console.log(\"rowCoord: \"+rowCoord)\r\n    // console.log(\"colCoord: \"+colCoord)\r\n    // console.log(\"pieceColor: \"+pieceColor)\r\n    let occupant;\r\n    let counts;\r\n\r\n    while( colIndex>=0){\r\n        occupant=board[rowIndex][colIndex];\r\n        if (occupant!==\" \"){\r\n            \r\n            if (occupant===pieceColor){\r\n                sameColorCount++\r\n                if(colIndex===0){\r\n                    oppositeColorCount++;\r\n                }\r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n\r\n            colIndex--;\r\n        } else {\r\n            break;\r\n        }\r\n\r\n    };\r\n    rowIndex=rowCoord;\r\n    colIndex=colCoord;\r\n    while(colIndex<15){\r\n        occupant=board[rowIndex][colIndex];\r\n        if(occupant!==\" \" ){\r\n            if (occupant===pieceColor){\r\n                sameColorCount++\r\n                if(colIndex===14){\r\n                    oppositeColorCount++;\r\n                }\r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n            colIndex++;\r\n        } else {\r\n            break;\r\n        }\r\n\r\n    }\r\n    counts={sameColor:sameColorCount, oppositeColor:oppositeColorCount}\r\n    // console.log(\"horizontal same counts: \"+counts.sameColor)\r\n    // console.log(\"horizontal opposite counts: \"+counts.oppositeColor)\r\n    return counts\r\n}\r\n\r\n\r\nfunction leftBotToRightTopCheck (rowCoord,colCoord,pieceColor,board){\r\n\r\n    let sameColorCount=-1;\r\n    let oppositeColorCount=0;\r\n    let rowIndex=rowCoord;\r\n    let colIndex=colCoord;\r\n    let occupant;\r\n    let counts;\r\n\r\n    //to right top\r\n        while(rowIndex>=0 && colIndex<15){\r\n            occupant=board[rowIndex][colIndex];\r\n            if(occupant!==\" \"){\r\n                \r\n                // console.log(\"rowIndex: \"+rowIndex) \r\n                // console.log(\"colIndex: \"+colIndex) \r\n                // console.log(\"occupant: \"+occupant) \r\n                if (occupant===pieceColor){\r\n                    sameColorCount++;   \r\n                    if(colIndex===15 || rowIndex===0){\r\n                        oppositeColorCount++;\r\n                    } \r\n                    // console.log(\"sameColorCount: \"+sameColorCount)        \r\n                } else {\r\n                    oppositeColorCount++;\r\n                    break;\r\n                }\r\n                rowIndex--;\r\n                colIndex++;\r\n            } else{\r\n                break;\r\n            }\r\n\r\n    }\r\n    //to left bot\r\n    rowIndex=rowCoord;\r\n    colIndex=colCoord;\r\n    while( colIndex>=0 && rowIndex<15){\r\n        occupant=board[rowIndex][colIndex];\r\n        if (occupant!==\" \"){\r\n            if (occupant===pieceColor){\r\n                sameColorCount++;   \r\n                if(colIndex===0 || rowIndex===15){\r\n                    oppositeColorCount++;\r\n                }  \r\n                // console.log(count)        \r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n            colIndex--;\r\n            rowIndex++;\r\n        } else{\r\n            break;\r\n        }\r\n\r\n    } \r\n\r\n    counts={sameColor:sameColorCount, oppositeColor:oppositeColorCount}\r\n    return counts\r\n\r\n}\r\n\r\n\r\nfunction leftTopToRightBotCheck (rowCoord,colCoord,pieceColor,board){\r\n\r\n    let sameColorCount=-1;\r\n    let oppositeColorCount=0;\r\n    let rowIndex=rowCoord;\r\n    let colIndex=colCoord;\r\n    let occupant;\r\n    let counts;\r\n    //to leftTop\r\n        while(rowIndex>=0 && colIndex>=0){\r\n        occupant=board[rowIndex][colIndex];\r\n        if(occupant!==\" \" ){\r\n            if (occupant===pieceColor){\r\n                sameColorCount++;   \r\n                if(colIndex===0 || rowIndex===0){\r\n                    oppositeColorCount++;\r\n                }  \r\n                // console.log(count)        \r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n            rowIndex--;\r\n            colIndex--;\r\n        } else{\r\n            break;\r\n        }\r\n\r\n    }\r\n    rowIndex=rowCoord;\r\n    colIndex=colCoord;\r\n    while(colIndex<15 && rowIndex<15){\r\n        occupant=board[rowIndex][colIndex];\r\n        if(occupant!==\" \" ){\r\n            if (occupant===pieceColor){\r\n                sameColorCount++;    \r\n                if(colIndex===15 || rowIndex===15){\r\n                    oppositeColorCount++;\r\n                } \r\n                // console.log(count)        \r\n            } else {\r\n                oppositeColorCount++;\r\n                break;\r\n            }\r\n            colIndex++;\r\n            rowIndex++;\r\n        } else{\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n    counts={sameColor:sameColorCount, oppositeColor:oppositeColorCount}\r\n    return counts\r\n}\r\n\r\nfunction threatRecognise(counts){\r\n    let sameColorCount= counts.sameColor;\r\n    let oppositeColorCount=counts.oppositeColor;\r\n    // console.log(\"threatRecognise sameColorCount: \"+sameColorCount)\r\n    // console.log(\"threatRecognise oppositeColorCount: \"+oppositeColorCount)\r\n    let threat=null;\r\n    if (sameColorCount===2 && oppositeColorCount===0){\r\n        threat=2\r\n    } else if (sameColorCount===2 && oppositeColorCount===1) {\r\n        threat=21\r\n    } else if (sameColorCount===2 && oppositeColorCount===1) {\r\n        threat=21\r\n    } else if (sameColorCount===3 && oppositeColorCount===0) {\r\n        threat=3\r\n    } else if (sameColorCount===3 && oppositeColorCount===1) {\r\n        threat=31\r\n    } else if (sameColorCount===4 && oppositeColorCount===0) {\r\n        threat=4\r\n    } else if (sameColorCount===4 && oppositeColorCount===1) {\r\n        threat=41\r\n    } else if ( sameColorCount>=5){\r\n    threat=5\r\n    }\r\n\r\nreturn threat\r\n}\r\n\r\nfunction moveEvaluation(move,pieceColor,defFactor,board){\r\n    let offence=atkMoveEvaluation(move,pieceColor,board);\r\n    let offenceScore=offence.score;\r\n    let atkThreats=offence.threats;\r\n    let oppositeColor=swapColor(pieceColor);\r\n    board[move[0]][move[1]]=oppositeColor;\r\n    let defence=atkMoveEvaluation(move,oppositeColor,board)\r\n    let defenceScore=defence.score*defFactor;\r\n    let defThreats=defence.threats;\r\n    board[move[0]][move[1]]=pieceColor;\r\n    let totalScore=offenceScore+defenceScore;\r\n    let moveEntity=new moveObject(move,atkThreats,defThreats,totalScore);\r\n    \r\n    // let totalScore=offenceScore;\r\n    // console.log(\"moveEvaluation function score:\"+totalScore)\r\n    return moveEntity\r\n}\r\n\r\n\r\n\r\nexport default moveEvaluation;","C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\components\\GeneralLogic.jsx",[],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\Experiment\\minimax.jsx",["157","158","159","160","161"],[],"C:\\Users\\Jason\\Desktop\\hxz157\\gomoku\\src\\Experiment\\moveEvaluationNoDF.jsx",["162","163","164","165","166"],[],{"ruleId":"167","severity":1,"message":"168","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":13},{"ruleId":"167","severity":1,"message":"171","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":21},{"ruleId":"167","severity":1,"message":"172","line":4,"column":22,"nodeType":"169","messageId":"170","endLine":4,"endColumn":34},{"ruleId":"167","severity":1,"message":"173","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"174","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":65,"column":1,"nodeType":"177","messageId":"178","endLine":79,"endColumn":11},{"ruleId":"167","severity":1,"message":"179","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":27},{"ruleId":"167","severity":1,"message":"180","line":11,"column":28,"nodeType":"169","messageId":"170","endLine":11,"endColumn":42},{"ruleId":"167","severity":1,"message":"179","line":10,"column":9,"nodeType":"169","messageId":"170","endLine":10,"endColumn":27},{"ruleId":"167","severity":1,"message":"180","line":10,"column":28,"nodeType":"169","messageId":"170","endLine":10,"endColumn":42},{"ruleId":"167","severity":1,"message":"168","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":13},{"ruleId":"167","severity":1,"message":"181","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"182","line":4,"column":19,"nodeType":"169","messageId":"170","endLine":4,"endColumn":33},{"ruleId":"167","severity":1,"message":"183","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":25},{"ruleId":"167","severity":1,"message":"173","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"184","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":16},{"ruleId":"167","severity":1,"message":"185","line":48,"column":9,"nodeType":"169","messageId":"170","endLine":48,"endColumn":28},{"ruleId":"167","severity":1,"message":"186","line":12,"column":10,"nodeType":"169","messageId":"170","endLine":12,"endColumn":29},{"ruleId":"167","severity":1,"message":"187","line":31,"column":10,"nodeType":"169","messageId":"170","endLine":31,"endColumn":26},{"ruleId":"167","severity":1,"message":"188","line":38,"column":10,"nodeType":"169","messageId":"170","endLine":38,"endColumn":30},{"ruleId":"167","severity":1,"message":"189","line":67,"column":9,"nodeType":"169","messageId":"170","endLine":67,"endColumn":29},{"ruleId":"167","severity":1,"message":"190","line":6,"column":32,"nodeType":"169","messageId":"170","endLine":6,"endColumn":39},{"ruleId":"167","severity":1,"message":"191","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"192","line":34,"column":9,"nodeType":"169","messageId":"170","endLine":34,"endColumn":22},{"ruleId":"167","severity":1,"message":"193","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":26},{"ruleId":"167","severity":1,"message":"194","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":24},{"ruleId":"167","severity":1,"message":"195","line":9,"column":9,"nodeType":"169","messageId":"170","endLine":9,"endColumn":19},{"ruleId":"167","severity":1,"message":"196","line":10,"column":9,"nodeType":"169","messageId":"170","endLine":10,"endColumn":18},{"ruleId":"167","severity":1,"message":"197","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":21},{"ruleId":"167","severity":1,"message":"198","line":12,"column":9,"nodeType":"169","messageId":"170","endLine":12,"endColumn":18},{"ruleId":"167","severity":1,"message":"199","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":26},{"ruleId":"167","severity":1,"message":"200","line":13,"column":9,"nodeType":"169","messageId":"170","endLine":13,"endColumn":21},{"ruleId":"167","severity":1,"message":"189","line":19,"column":9,"nodeType":"169","messageId":"170","endLine":19,"endColumn":29},{"ruleId":"167","severity":1,"message":"189","line":86,"column":9,"nodeType":"169","messageId":"170","endLine":86,"endColumn":29},{"ruleId":"167","severity":1,"message":"189","line":150,"column":9,"nodeType":"169","messageId":"170","endLine":150,"endColumn":29},{"ruleId":"167","severity":1,"message":"194","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":25},{"ruleId":"167","severity":1,"message":"195","line":8,"column":9,"nodeType":"169","messageId":"170","endLine":8,"endColumn":19},{"ruleId":"167","severity":1,"message":"196","line":9,"column":9,"nodeType":"169","messageId":"170","endLine":9,"endColumn":18},{"ruleId":"167","severity":1,"message":"197","line":10,"column":9,"nodeType":"169","messageId":"170","endLine":10,"endColumn":21},{"ruleId":"167","severity":1,"message":"198","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":18},"no-unused-vars","'Board' is defined but never used.","Identifier","unusedVar","'putDownPiece' is defined but never used.","'checkWinning' is defined but never used.","'useState' is defined but never used.","'Component' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'initdrawCheckBoard' is defined but never used.","'drawCheckBoard' is defined but never used.","'NavButton' is defined but never used.","'FunctionButton' is defined but never used.","'chooseRandomMove' is defined but never used.","'ShowText' is defined but never used.","'gamePerformanceList' is assigned a value but never used.","'minimaxPreCondition' is defined but never used.","'minimaxInvariant' is defined but never used.","'minimaxPostCondition' is defined but never used.","'nextCurrentNodeScore' is defined but never used.","'shuffle' is defined but never used.","'assert' is defined but never used.","'moveWithScore' is defined but never used.","'ComputerVsComputer' is defined but never used.","'copyTwoDimArray' is defined but never used.","'threeCount' is assigned a value but never used.","'fourCount' is assigned a value but never used.","'fourOneCount' is assigned a value but never used.","'fiveCount' is assigned a value but never used.","'moveEvaluationNoDF' is defined but never used.","'branchFactor' is assigned a value but never used."]
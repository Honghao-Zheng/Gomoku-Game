{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\MSc project\\\\project\\\\gomoku\\\\src\\\\components\\\\PlayerVsPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport Board from \"./Board\";\nimport NavButton from \"./Buttons\";\nimport initialBoard from \"./SharedData\";\nimport { putDownPiece, checkWinning } from \"./GameLogic\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet boardArrangement = initialBoard;\n\nfunction PlayerVsPlayer(props) {\n  _s();\n\n  const [turnState, setTurn] = useState({\n    isBlackTurn: true\n  });\n  const [gameState, setGame] = useState({\n    isEnded: false,\n    winner: null\n  });\n  const [moveState, setMove] = useState({\n    moveMade: []\n  });\n\n  function handleMoveClick(clickedIntersectionCoord) {\n    let turn = turnState.isBlackTurn ? \"B\" : \"W\";\n    let rowCoord, colCoord;\n    let isMoveMade;\n    let whoWin;\n    [rowCoord, colCoord] = clickedIntersectionCoord;\n    isMoveMade = putDownPiece(clickedIntersectionCoord, turn, boardArrangement);\n\n    if (isMoveMade) {\n      whoWin = checkWinning(turn, rowCoord, colCoord, boardArrangement);\n\n      if (whoWin !== null) {\n        setGame({\n          isEnded: true,\n          winner: whoWin\n        });\n      }\n\n      setMove({\n        moveMade: clickedIntersectionCoord\n      });\n      setTurn({\n        isBlackTurn: gameState.isBlackTurn ? false : true\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      text: \"Home\",\n      onClick: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      boardArrangement: boardArrangement,\n      onClick: _ref => {\n        let [rowNum, colNum] = _ref;\n        return handleMoveClick([rowNum, colNum]);\n      },\n      moveMade: [moveState.moveMade]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerVsPlayer, \"vyxZbMHQek0J23KZEW24OM9Umm8=\");\n\n_c = PlayerVsPlayer;\nexport default PlayerVsPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerVsPlayer\");","map":{"version":3,"names":["Board","NavButton","initialBoard","putDownPiece","checkWinning","useState","boardArrangement","PlayerVsPlayer","props","turnState","setTurn","isBlackTurn","gameState","setGame","isEnded","winner","moveState","setMove","moveMade","handleMoveClick","clickedIntersectionCoord","turn","rowCoord","colCoord","isMoveMade","whoWin","rowNum","colNum"],"sources":["C:/Users/Jason/Desktop/MSc project/project/gomoku/src/components/PlayerVsPlayer.jsx"],"sourcesContent":["import Board from \"./Board\";\r\nimport NavButton from \"./Buttons\";\r\nimport initialBoard from \"./SharedData\";\r\nimport { putDownPiece, checkWinning } from \"./GameLogic\"\r\nimport { useState } from \"react\";\r\n\r\nlet boardArrangement=initialBoard;\r\n\r\nfunction PlayerVsPlayer(props){\r\n     const [turnState,setTurn]=useState({\r\n    isBlackTurn:true\r\n  });\r\n      const [gameState,setGame]=useState({\r\n        isEnded:false,\r\n        winner:null\r\n      })\r\n      const [moveState,setMove]=useState({\r\n        moveMade:[]\r\n      })\r\n    function handleMoveClick(clickedIntersectionCoord){\r\n      \r\n      let turn=turnState.isBlackTurn?\"B\":\"W\";\r\n      let rowCoord, colCoord;\r\n      let isMoveMade;\r\n      let whoWin;\r\n      [rowCoord,colCoord]=clickedIntersectionCoord;\r\n      isMoveMade = putDownPiece(clickedIntersectionCoord,turn,boardArrangement);\r\n      if (isMoveMade){\r\n        whoWin =checkWinning(turn,rowCoord,colCoord,boardArrangement);\r\n        if (whoWin!==null){\r\n          setGame({\r\n            isEnded:true,\r\n            winner:whoWin\r\n          })\r\n        } \r\n        setMove({moveMade:clickedIntersectionCoord})\r\n        setTurn({isBlackTurn:gameState.isBlackTurn?false:true});\r\n      } \r\n\r\n    }\r\n    return(\r\n        <div>\r\n        <div></div>\r\n        <NavButton text=\"Home\" onClick={null}/>\r\n        <div></div>\r\n        <Board\r\n            boardArrangement={boardArrangement}\r\n            onClick={([rowNum,colNum])=>handleMoveClick([rowNum,colNum])}\r\n            moveMade={[moveState.moveMade]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerVsPlayer;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,aAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAIC,gBAAgB,GAACJ,YAArB;;AAEA,SAASK,cAAT,CAAwBC,KAAxB,EAA8B;EAAA;;EACzB,MAAM,CAACC,SAAD,EAAWC,OAAX,IAAoBL,QAAQ,CAAC;IACpCM,WAAW,EAAC;EADwB,CAAD,CAAlC;EAGC,MAAM,CAACC,SAAD,EAAWC,OAAX,IAAoBR,QAAQ,CAAC;IACjCS,OAAO,EAAC,KADyB;IAEjCC,MAAM,EAAC;EAF0B,CAAD,CAAlC;EAIA,MAAM,CAACC,SAAD,EAAWC,OAAX,IAAoBZ,QAAQ,CAAC;IACjCa,QAAQ,EAAC;EADwB,CAAD,CAAlC;;EAGF,SAASC,eAAT,CAAyBC,wBAAzB,EAAkD;IAEhD,IAAIC,IAAI,GAACZ,SAAS,CAACE,WAAV,GAAsB,GAAtB,GAA0B,GAAnC;IACA,IAAIW,QAAJ,EAAcC,QAAd;IACA,IAAIC,UAAJ;IACA,IAAIC,MAAJ;IACA,CAACH,QAAD,EAAUC,QAAV,IAAoBH,wBAApB;IACAI,UAAU,GAAGrB,YAAY,CAACiB,wBAAD,EAA0BC,IAA1B,EAA+Bf,gBAA/B,CAAzB;;IACA,IAAIkB,UAAJ,EAAe;MACbC,MAAM,GAAErB,YAAY,CAACiB,IAAD,EAAMC,QAAN,EAAeC,QAAf,EAAwBjB,gBAAxB,CAApB;;MACA,IAAImB,MAAM,KAAG,IAAb,EAAkB;QAChBZ,OAAO,CAAC;UACNC,OAAO,EAAC,IADF;UAENC,MAAM,EAACU;QAFD,CAAD,CAAP;MAID;;MACDR,OAAO,CAAC;QAACC,QAAQ,EAACE;MAAV,CAAD,CAAP;MACAV,OAAO,CAAC;QAACC,WAAW,EAACC,SAAS,CAACD,WAAV,GAAsB,KAAtB,GAA4B;MAAzC,CAAD,CAAP;IACD;EAEF;;EACD,oBACI;IAAA,wBACA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,SAAD;MAAW,IAAI,EAAC,MAAhB;MAAuB,OAAO,EAAE;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA,QAAC,KAAD;MACI,gBAAgB,EAAEL,gBADtB;MAEI,OAAO,EAAE;QAAA,IAAC,CAACoB,MAAD,EAAQC,MAAR,CAAD;QAAA,OAAmBR,eAAe,CAAC,CAACO,MAAD,EAAQC,MAAR,CAAD,CAAlC;MAAA,CAFb;MAGI,QAAQ,EAAE,CAACX,SAAS,CAACE,QAAX;IAHd;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GA5CQX,c;;KAAAA,c;AA8CT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}
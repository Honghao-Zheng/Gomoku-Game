{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\MSc project\\\\project\\\\gomoku\\\\src\\\\components\\\\Board.jsx\";\n//jshint esversion:6\nimport React from \"react\";\nimport { Intersection } from \"./Buttons\";\nimport { arraysHasArray } from \"./GeneralAlgorithms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  function Board(props) {\n    function renderRow(row, rowNum) {\n      let cellColour;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((pieceColour, colNum) => {\n          cellColour = \"white\";\n\n          if (arraysHasArray(props.moveMade, [rowNum, colNum])) {\n            cellColour = \"yellow\";\n          }\n\n          return /*#__PURE__*/_jsxDEV(Intersection, {\n            colour: cellColour,\n            piece: pieceColour,\n            onClick: () => props.onClick([rowNum, colNum])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.boardArrangement.map((row, rowIndex) => {\n        let rowNum = rowIndex;\n        return renderRow(row, rowNum);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Intersection","arraysHasArray","Board","props","renderRow","row","rowNum","cellColour","map","pieceColour","colNum","moveMade","onClick","boardArrangement","rowIndex"],"sources":["C:/Users/Jason/Desktop/MSc project/project/gomoku/src/components/Board.jsx"],"sourcesContent":["//jshint esversion:6\nimport React from \"react\";\nimport {Intersection} from \"./Buttons\";\nimport { arraysHasArray } from \"./GeneralAlgorithms\";\n\nfunction Board (props) {\n\n  function Board (props) {\n\n    function renderRow(row,rowNum){\n      let cellColour;\n  \n      return (\n        <div>\n        {row.map((pieceColour,colNum)=>{\n          cellColour=\"white\"\n          \n          if(arraysHasArray(props.moveMade,[rowNum,colNum])){\n        cellColour=\"yellow\"\n      }     \n          return (\n          <Intersection\n          colour={cellColour}\n          piece={pieceColour}\n          onClick={()=>props.onClick([rowNum,colNum])}\n          />\n        );\n      })}\n        </div>\n      )\n    }\n    return(\n      <div>\n      {props.boardArrangement.map((row,rowIndex)=>{\n        let rowNum=rowIndex\n        return (\n          renderRow(row,rowNum)\n        )\n      }\n    )}\n  \n  </div>\n    )\n  }\n}\n\nexport default Board;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,SAASC,cAAT,QAA+B,qBAA/B;;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;EAErB,SAASD,KAAT,CAAgBC,KAAhB,EAAuB;IAErB,SAASC,SAAT,CAAmBC,GAAnB,EAAuBC,MAAvB,EAA8B;MAC5B,IAAIC,UAAJ;MAEA,oBACE;QAAA,UACCF,GAAG,CAACG,GAAJ,CAAQ,CAACC,WAAD,EAAaC,MAAb,KAAsB;UAC7BH,UAAU,GAAC,OAAX;;UAEA,IAAGN,cAAc,CAACE,KAAK,CAACQ,QAAP,EAAgB,CAACL,MAAD,EAAQI,MAAR,CAAhB,CAAjB,EAAkD;YACpDH,UAAU,GAAC,QAAX;UACD;;UACG,oBACA,QAAC,YAAD;YACA,MAAM,EAAEA,UADR;YAEA,KAAK,EAAEE,WAFP;YAGA,OAAO,EAAE,MAAIN,KAAK,CAACS,OAAN,CAAc,CAACN,MAAD,EAAQI,MAAR,CAAd;UAHb;YAAA;YAAA;YAAA;UAAA,QADA;QAOH,CAbE;MADD;QAAA;QAAA;QAAA;MAAA,QADF;IAkBD;;IACD,oBACE;MAAA,UACCP,KAAK,CAACU,gBAAN,CAAuBL,GAAvB,CAA2B,CAACH,GAAD,EAAKS,QAAL,KAAgB;QAC1C,IAAIR,MAAM,GAACQ,QAAX;QACA,OACEV,SAAS,CAACC,GAAD,EAAKC,MAAL,CADX;MAGD,CALA;IADD;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;AACF;;KAvCQJ,K;AAyCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\n// jshint esversion:6\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { putDownPiece, checkWinning } from \"./GameLogic\"; // let boardArrangement=[\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"]\n// ];\n// let boardArrangementAI=[\n//   [\" \",\" \",\" \",\" \",\"B\",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"]\n// ];\n\nfunction GomokuGame() {\n  _s();\n\n  const [homePageState, setHomeState] = useState({\n    showPage: true\n  });\n\n  function clickHandleNextPage() {\n    setHomeState({\n      showPage: homePageState.showPage ? false : null\n    });\n  } // const [gameState,setSate]=useState({\n  //   isBlackTurn:true\n  // });\n  //   function handleMoveClick(clickedIntersectionCoord){\n  //     let turn=gameState.isBlackTurn?\"B\":\"W\";\n  //     let rowCoord, colCoord;\n  //     let moveMade;\n  //     let whoWin;\n  //     [rowCoord,colCoord]=clickedIntersectionCoord;\n  //     moveMade = putDownPiece(clickedIntersectionCoord,turn,boardArrangement);\n  //     if (moveMade){\n  //       whoWin =checkWinning(turn,rowCoord,colCoord,boardArrangement);\n  //       if (whoWin===\"B\"){\n  //         alert(\"black piece win\")\n  //       } else if(whoWin===\"W\"){\n  //         alert(\"white piece win\")\n  //       }\n  //       setSate({isBlackTurn:gameState.isBlackTurn?false:true});\n  //     } \n  //   }\n  //   return (\n  //     <div >\n  //       <div className=\"game row\">\n  //           <Board\n  //           boardArrangement={boardArrangement}\n  //           onClick={([rowNum,colNum])=>handleMoveClick([rowNum,colNum])}\n  //           />\n  //       </div>\n  //       <div className=\"game row\">\n  //       <Board\n  //           boardArrangement={boardArrangementAI}\n  //           onClick={([rowNum,colNum])=>handleMoveClick([rowNum,colNum])}\n  //           />\n  //       </div>\n  //     </div>\n  //   );\n\n}\n\n_s(GomokuGame, \"TSdVzJ6M/cVeq1Fi4aeABbkpWC8=\");\n\n_c = GomokuGame;\nexport default GomokuGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"GomokuGame\");","map":{"version":3,"names":["React","useState","Board","putDownPiece","checkWinning","GomokuGame","homePageState","setHomeState","showPage","clickHandleNextPage"],"sources":["C:/Users/Jason/Desktop/MSc project/project/gomoku/src/components/GomokuGame.jsx"],"sourcesContent":["// jshint esversion:6\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport {putDownPiece,checkWinning} from \"./GameLogic\";\n\n\n// let boardArrangement=[\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"]\n\n// ];\n\n// let boardArrangementAI=[\n//   [\" \",\" \",\" \",\" \",\"B\",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"],\n//   [\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"]\n\n// ];\n\n\nfunction GomokuGame (){\n\n  const [homePageState,setHomeState]=useState({\n    showPage:true\n  })\n  function clickHandleNextPage(){\n      setHomeState({showPage:homePageState.showPage?false:null})\n  }\n  // const [gameState,setSate]=useState({\n  //   isBlackTurn:true\n  // });\n\n  //   function handleMoveClick(clickedIntersectionCoord){\n      \n  //     let turn=gameState.isBlackTurn?\"B\":\"W\";\n  //     let rowCoord, colCoord;\n  //     let moveMade;\n  //     let whoWin;\n  //     [rowCoord,colCoord]=clickedIntersectionCoord;\n  //     moveMade = putDownPiece(clickedIntersectionCoord,turn,boardArrangement);\n  //     if (moveMade){\n  //       whoWin =checkWinning(turn,rowCoord,colCoord,boardArrangement);\n  //       if (whoWin===\"B\"){\n  //         alert(\"black piece win\")\n  //       } else if(whoWin===\"W\"){\n  //         alert(\"white piece win\")\n  //       }\n  //       setSate({isBlackTurn:gameState.isBlackTurn?false:true});\n  //     } \n\n  //   }\n  //   return (\n  //     <div >\n  //       <div className=\"game row\">\n  //           <Board\n  //           boardArrangement={boardArrangement}\n  //           onClick={([rowNum,colNum])=>handleMoveClick([rowNum,colNum])}\n  //           />\n  //       </div>\n  //       <div className=\"game row\">\n  //       <Board\n  //           boardArrangement={boardArrangementAI}\n  //           onClick={([rowNum,colNum])=>handleMoveClick([rowNum,colNum])}\n  //           />\n  //       </div>\n\n  //     </div>\n\n  //   );\n\n}\n\nexport default GomokuGame;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,YAAR,EAAqBC,YAArB,QAAwC,aAAxC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,SAASC,UAAT,GAAsB;EAAA;;EAEpB,MAAM,CAACC,aAAD,EAAeC,YAAf,IAA6BN,QAAQ,CAAC;IAC1CO,QAAQ,EAAC;EADiC,CAAD,CAA3C;;EAGA,SAASC,mBAAT,GAA8B;IAC1BF,YAAY,CAAC;MAACC,QAAQ,EAACF,aAAa,CAACE,QAAd,GAAuB,KAAvB,GAA6B;IAAvC,CAAD,CAAZ;EACH,CAPmB,CAQpB;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;;AAED;;GAlDQH,U;;KAAAA,U;AAoDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}
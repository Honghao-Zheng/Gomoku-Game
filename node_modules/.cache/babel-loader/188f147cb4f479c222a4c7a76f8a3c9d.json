{"ast":null,"code":"//jshint esversion:6\nfunction isArrayEqualArray(array1, array2) {\n  if (array1.length === array2.length) {\n    let index;\n\n    for (index = 0; index < array1.length; index++) {\n      if (array1[index] !== array2[index]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nfunction arraysHasArray(collectionOfArrays, singleArray) {\n  let index;\n\n  for (index = 0; index < collectionOfArrays.length; index++) {\n    if (isArrayEqualArray(collectionOfArrays[index], singleArray)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction copyTwoDimArray(array) {\n  let twoDimArray = [];\n  let rowArray = [];\n  let rowIndex, colIndex;\n\n  for (rowIndex = 0; rowIndex < array.length; rowIndex++) {\n    for (colArray = 0; colArray < array.length; colArray++) {\n      colArray.push(array);\n    }\n  }\n}\n\nexport { arraysHasArray, isArrayEqualArray };","map":{"version":3,"names":["isArrayEqualArray","array1","array2","length","index","arraysHasArray","collectionOfArrays","singleArray","copyTwoDimArray","array","twoDimArray","rowArray","rowIndex","colIndex","colArray","push"],"sources":["C:/Users/Jason/Desktop/MSc project/project/gomoku/src/components/GeneralAlgorithms.jsx"],"sourcesContent":["//jshint esversion:6\r\nfunction isArrayEqualArray(array1,array2){\r\n  if (array1.length===array2.length){\r\n\r\n    let index;\r\n    for(index=0;index<array1.length;index++){\r\n      if (array1[index] !==array2[index]){\r\n        return (false);\r\n      }\r\n    }\r\n    \r\n    return (true);\r\n}\r\n\r\n}\r\n\r\n  function arraysHasArray(collectionOfArrays,singleArray){\r\n    let index;\r\n    for (index=0;index<collectionOfArrays.length;index++){\r\n      if (isArrayEqualArray(collectionOfArrays[index],singleArray)){\r\n        return (true);\r\n      }\r\n    }\r\n    return (false);\r\n  }\r\n\r\n\r\n  function copyTwoDimArray(array){\r\n    let twoDimArray=[];\r\n    let rowArray=[];\r\n    let rowIndex,colIndex;\r\n    for (rowIndex=0;rowIndex<array.length;rowIndex++){\r\n      for (colArray=0;colArray<array.length;colArray++){\r\n        colArray.push(array)\r\n      \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport {arraysHasArray,isArrayEqualArray};\r\n"],"mappings":"AAAA;AACA,SAASA,iBAAT,CAA2BC,MAA3B,EAAkCC,MAAlC,EAAyC;EACvC,IAAID,MAAM,CAACE,MAAP,KAAgBD,MAAM,CAACC,MAA3B,EAAkC;IAEhC,IAAIC,KAAJ;;IACA,KAAIA,KAAK,GAAC,CAAV,EAAYA,KAAK,GAACH,MAAM,CAACE,MAAzB,EAAgCC,KAAK,EAArC,EAAwC;MACtC,IAAIH,MAAM,CAACG,KAAD,CAAN,KAAiBF,MAAM,CAACE,KAAD,CAA3B,EAAmC;QACjC,OAAQ,KAAR;MACD;IACF;;IAED,OAAQ,IAAR;EACH;AAEA;;AAEC,SAASC,cAAT,CAAwBC,kBAAxB,EAA2CC,WAA3C,EAAuD;EACrD,IAAIH,KAAJ;;EACA,KAAKA,KAAK,GAAC,CAAX,EAAaA,KAAK,GAACE,kBAAkB,CAACH,MAAtC,EAA6CC,KAAK,EAAlD,EAAqD;IACnD,IAAIJ,iBAAiB,CAACM,kBAAkB,CAACF,KAAD,CAAnB,EAA2BG,WAA3B,CAArB,EAA6D;MAC3D,OAAQ,IAAR;IACD;EACF;;EACD,OAAQ,KAAR;AACD;;AAGD,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;EAC7B,IAAIC,WAAW,GAAC,EAAhB;EACA,IAAIC,QAAQ,GAAC,EAAb;EACA,IAAIC,QAAJ,EAAaC,QAAb;;EACA,KAAKD,QAAQ,GAAC,CAAd,EAAgBA,QAAQ,GAACH,KAAK,CAACN,MAA/B,EAAsCS,QAAQ,EAA9C,EAAiD;IAC/C,KAAKE,QAAQ,GAAC,CAAd,EAAgBA,QAAQ,GAACL,KAAK,CAACN,MAA/B,EAAsCW,QAAQ,EAA9C,EAAiD;MAC/CA,QAAQ,CAACC,IAAT,CAAcN,KAAd;IAED;EACF;AACF;;AAIH,SAAQJ,cAAR,EAAuBL,iBAAvB"},"metadata":{},"sourceType":"module"}
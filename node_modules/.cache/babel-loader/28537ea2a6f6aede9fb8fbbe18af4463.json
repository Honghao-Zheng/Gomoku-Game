{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\MSc project\\\\project\\\\gomoku\\\\src\\\\components\\\\Board.jsx\";\n//jshint esversion:6\nimport React from \"react\";\nimport { Intersection } from \"./Buttons\";\nimport { isArrayEqualArray } from \"./GeneralAlgorithms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  function renderRow(row, rowNum) {\n    let cellColour;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((pieceColour, colNum) => {\n        cellColour = \"white\";\n\n        if (isArrayEqualArray(props.moveMade, [rowNum, colNum])) {\n          cellColour = \"yellow\";\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.boardArrangement.map((row, rowIndex) => {\n      let rowNum = rowIndex;\n      return renderRow(row, rowNum);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Intersection","isArrayEqualArray","Board","props","renderRow","row","rowNum","cellColour","map","pieceColour","colNum","moveMade","boardArrangement","rowIndex"],"sources":["C:/Users/Jason/Desktop/MSc project/project/gomoku/src/components/Board.jsx"],"sourcesContent":["//jshint esversion:6\nimport React from \"react\";\nimport {Intersection} from \"./Buttons\";\nimport { isArrayEqualArray } from \"./GeneralAlgorithms\";\n\nfunction Board (props) {\n\n\n\n    function renderRow(row,rowNum){\n      let cellColour;\n  \n      return (\n        <div>\n        {row.map((pieceColour,colNum)=>{\n          cellColour=\"white\"\n          \n          if(isArrayEqualArray(props.moveMade,[rowNum,colNum])){\n        cellColour=\"yellow\"\n      }     \n\n      })}\n        </div>\n      )\n    }\n    return(\n      <div>\n      {props.boardArrangement.map((row,rowIndex)=>{\n        let rowNum=rowIndex\n        return (\n          renderRow(row,rowNum)\n        )\n      }\n    )}\n  \n  </div>\n    )\n  }\n\nexport default Board;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;EAInB,SAASC,SAAT,CAAmBC,GAAnB,EAAuBC,MAAvB,EAA8B;IAC5B,IAAIC,UAAJ;IAEA,oBACE;MAAA,UACCF,GAAG,CAACG,GAAJ,CAAQ,CAACC,WAAD,EAAaC,MAAb,KAAsB;QAC7BH,UAAU,GAAC,OAAX;;QAEA,IAAGN,iBAAiB,CAACE,KAAK,CAACQ,QAAP,EAAgB,CAACL,MAAD,EAAQI,MAAR,CAAhB,CAApB,EAAqD;UACvDH,UAAU,GAAC,QAAX;QACD;MAEA,CAPE;IADD;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;EACD,oBACE;IAAA,UACCJ,KAAK,CAACS,gBAAN,CAAuBJ,GAAvB,CAA2B,CAACH,GAAD,EAAKQ,QAAL,KAAgB;MAC1C,IAAIP,MAAM,GAACO,QAAX;MACA,OACET,SAAS,CAACC,GAAD,EAAKC,MAAL,CADX;IAGD,CALA;EADD;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;KAhCMJ,K;AAkCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}